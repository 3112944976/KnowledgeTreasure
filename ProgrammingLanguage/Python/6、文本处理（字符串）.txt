1、字符串基本概论认知（P150）
2、字符串编码格式简介（P151）
# 不同的编码格式之间相差很大，采用不同的编码格式意味着不同的表达和存储形式。
#查看默认编码格式：>>>import sys>>>sys.getdefaultencoding()
	1.ASCII（美国标准信息码）是最早的字符串编码，其仅仅对数字、大小写字母、部分符号进行了编码，在使用范围上具有局限性。
	2.Unicode是包含有所有字符的编码，但是其只规定了字符的二进制代码，却没有规定其如何存储。
	（UTF-8是Unicode的实现方式之一，它向下兼容了ASCII码的规则，且又扩展了其他语言符号的应用。）
	3.UTF-8对所有需要用到的字符进行了编码，其以一个字节表示英文字符，3个字节表示中文字符。
	4.GB2312（我国制定的中文编码）、GBK（GB2312的扩充）、CP936（微软在GBK基础上的再开发），都是使用一个字节表示英文字符，2个字节表示中文字符。
3、转义字符与原始字符串（P152）
	1.Python常用的转义字符：
		\b(退格)
		\f（换页）
		\n（换行）
		\r（回车）
		\t（水平制表符）
		\v（垂直制表符）
		\\（\）
		\'（'）
		\''（''）
		\ooo（3位八进制对应的字符）
		\xhh（2位十六进制对应的字符）
		\uhhhh（4位十六进制表示的Unicode字符）
4、字符串格式化（P153-156）
	1.使用%进行格式化：
	# 常用格式字符（详见P153-表7-2）
		'% [-]（指定左对齐） [+]（对正数加正号） [0]（指定空位加0） [m]（指定最小宽度） [.n]（指定精度） 格式字符（指定类型）' % x（带转化的表达式）
	
	2.使用format()方法进行字符串格式化：（详见P154-155）
	# 不仅可以对使用默认索引表示的位置进行精确格式化插入，还可以使用关键参数进行格式化，更妙的是支持序列解包格式化字符串。
	3.格式化的字符串常量
		>>>name = 'Dong'
		>>>age = '39'
		>>>f'My name is {name},and I am {age} years old.'
5、字符串常用操作（详见P156-167）
	1.find()\rfind()\index()\rindex()\count()
	2.split()\rsplit()\partition()\parttition()
	3.join()
	4.lower()\upper()\capitalize()\title()\swapcase()
	5.replace()\maketrans()\translate()
	6.strip()\rstrip()\lstrip()
	7.startswith()\endswith()
	8.isalnum()\isalpha()\isdigit()\isdecimal()\isnumeric()\isspace()\isupper()\islower()
	9.center()\ljust()\rjust()\zfill()
	01.str支持运算符'+'连接str，但是它的运行速度在处理大文本时，远小于使用join()。
	02.使用in and replace()可以识别并替换屏蔽掉用户输入的非法敏感字符。
	03.使用eval()时要注意屏蔽用户利用该函数机制进行一些非法输入操作，应进行必要的过滤，所以推荐使用literal_eval()。
	04.str支持切片操作。
6、关于生成指定长度的随机密码的程序代码（P167-168）
7、中英文分词:常规代码 or (jieba/snownlp)扩展库
8、汉字到拼音的转换：扩展库pypinyin