1、正则表达式概念
	其是一个更高效化的字符串处理工具。它是由元字符机器不同组合构成的。它使用了预定义的模式去匹配一类具有共同特征的字符串，来方便其快速完成查找、替代等处理。
2、正则表达式语法
	1.常用的元字符（P174-174表8-1）
	2.使用（）表示一个子模式
	3.如果以\开头的元字符与转义字符相同，则使用\\
	4.表达式用法集锦（P176）
		1.^不在[ ]里面时，不表示非得意思，而是表示特指。
		2.'^... ...$'表示匹配整个字符串，^$分别表示匹配行首，行尾。
		3.'^... ...$': 中得 ‘：’为检查字符。
		4.对于【‘^（？=.*[1]）(？=.*[2])(？=.*[3]）.{8,}$’: 】检查字符串中必须要含有1，2，3模块中规定的字符样式，并且长度至少为8。
		5.正则表达式只进行形式上的检查，不保证内容的准确性。
3、使用标准库re处理字符串
	1.常用方法（P177-178表8-3）
4、使用正则表达式对象处理字符串（P181-183）
	1.诞生目的：
		虽然re模块能处理字符串，但是正则表达式对象提供了更多的功能。
	2.优势:
		1.使用编译后的正则表达式对象，可以提高处理字符串的速度。
		2.提供了更强大的字符串处理功能。
	3.使用方法：
	# pattern:模式，方法。
		1.使用re模块的compile()方法将正则表达式编译成正则表达式对象：pattern=re.compile(r'\bB\w+\b')
		2.使用正则表达式对象提供的方法进行字符串处理:  pattern.findall('Bye my friends, my love to your life at every day!')
5、Match对象（P183-185）
	1.正则表达式模块或正则表达式对象的match()方法和search()方法，匹配成功后都会返回Match对象。